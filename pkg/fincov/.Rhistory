training_period <- 36
##### Object Oriented Approach #####
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
source('~/devel/R/covariance/R/exponential_smoothing.R', echo=TRUE)
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
source('~/devel/R/covariance/R/exponential_smoothing.R', echo=TRUE)
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
source('~/devel/R/covariance/R/exponential_smoothing.R', echo=TRUE)
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
source('~/devel/R/covariance/R/exponential_smoothing.R', echo=TRUE)
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
names(robust_model)
source('~/devel/R/covariance/R/exponential_smoothing.R', echo=TRUE)
set.seed(123)
robust_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "robust")
names(robust_model)
set.seed(123)
classic_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "classic")
names(classic_model)
names(robust_model)
set.seed(123)
classic_model <- ExponentialSmoothing(R, NULL, startup_period, training_period, "classic")
names(classic_model)
x <- matrix(rnorm(100*3), ncol = 3)
Sx <- cov(x)
D2 <- mahalanobis(x, colMeans(x), Sx)
plot(density(D2, bw = 0.5),
main="Squared Mahalanobis distances, n=100, p=3") ; rug(D2)
qqplot(qchisq(ppoints(100), df = 3), D2,
main = expression("Q-Q plot of Mahalanobis" * ~D^2 *
" vs. quantiles of" * ~ chi[3]^2))
D2
install.packages("chemometrics")
library(chemometrics)
library(chemometrics)
data(glass)
data(glass.grp)
head(glass)
head(x)
require(robustbase)
res <- Moutlier(glass,quantile=0.975,pch=glass.grp)
res
qchisq(0.975, df=nrow(x))
Moutlier
qchisq(0.975, df=ncol(x))
sqrt(qchisq(0.975, df=ncol(x)))
ncol(x)
sqrt(qchisq(0.975, ncol(x)))
chemometrics::Moutlier
set.seed(201307)
n <- 1000
library(MASS)
Sigma <- matrix(c(1.0, .80, .50, .20,
.80, 1.0, .05, .05,
.50, .05, 1.0, .05,
.20, .05, .05, 1.0), ncol = 4)
x <- mvrnorm(n, Sigma, mu = c(100,100,100,100), empirical = TRUE)
df.1 <- data.frame(x); rm(x)
names(df.1) <- c("y", "x1", "x2", "x3")
out <- c(50,150,250,500,750,850,950)
df.2 <- df.1
df.2[out,] <- df.2[out,] + c(sd(df.1[,1])*5, sd(df.1[,2])*5,
sd(df.1[,3])*5, sd(df.1[,4])*5)
x.mcd <- cov.rob(x, method="mcd")
set.seed(201307)
n <- 1000
library(MASS)
Sigma <- matrix(c(1.0, .80, .50, .20,
.80, 1.0, .05, .05,
.50, .05, 1.0, .05,
.20, .05, .05, 1.0), ncol = 4)
x <- mvrnorm(n, Sigma, mu = c(100,100,100,100), empirical = TRUE)
df.1 <- data.frame(x)
names(df.1) <- c("y", "x1", "x2", "x3")
out <- c(50,150,250,500,750,850,950)
df.2 <- df.1
df.2[out,] <- df.2[out,] + c(sd(df.1[,1])*5, sd(df.1[,2])*5,
sd(df.1[,3])*5, sd(df.1[,4])*5)
# calculate the classic mahalanobis distance
mahalanobis(x, colMeans(x), cov(x))
x.mcd <- cov.rob(x, method="mcd")
x.mcd
classical.md <- mahalanobis(x, colMeans(x), cov(x))
# Calculate the robust mahalanobis distance
# This is the mahalanobis distance using robust estimates of location
# and scale. Use MCD in this example.
x.mcd <- cov.rob(x, method="mcd")
robust.md <- mahalanobis(x, x.mcd$center, x.mcd$cov)
head(x)
chemometrics::Moutlier(x)
tmp <- chemometrics::Moutlier(x, quantile=0.99)
tmp
qchisq(0.975, ncol(x))
sqrt(qchisq(0.975, ncol(x)))
sqrt(qchisq(0.975, ncol(x), lower.tail=TRUE))
sqrt(qchisq(0.975, ncol(x), lower.tail=FALSE))
chemometrics::Moutlier
quantile=0.975
sqrt(qchisq(quantile, ncol(q)))
sqrt(qchisq(quantile, ncol(x)))
quantile=0.975
sqrt(qchisq(quantile, ncol(x)))
sqrt(qchisq(quantile, ncol(x)), log.p=TRUE)
sqrt(qchisq(quantile, ncol(x), log.p=TRUE))
sqrt(qchisq(quantile, ncol(x)))
mahalanobis
mahalanobis(x, x.mcd$center, x.mcd$cov)
library(robust)
fit.models(list(ROBUST=covRob(x), CLASSICAL=cov(x))
fit.models(list(ROBUST=covRob(x), CLASSICAL=cov(x)))
list(ROBUST=covRob(x), CLASSICAL=cov(x))
fit.models(list(ROBUST=covRob(x), CLASSICAL=cov(x)))
cov.fm <- fit.models(list(ROBUST=covRob(x), CLASSICAL=cov(x)))
traceback()
cov.fm = fit.models(list(ROBUST = covRob(data),CLASSICAL =
cov(data)))
cov.fm = fit.models(list(ROBUST = covRob(x), CLASSICAL = cov(x)))
library(covariance)
library(covariance)
data(hbk)
hbk.x <- data.matrix(hbk[, 1:3])
library(covariance)
detectOutliers(R)
detectOutliers(hbk.x)
library(covariance)
detectOutliers(hbk.x)
traceback()
library(covariance)
detectOutliers(hbk.x)
detectOutliers(hbk.x)$object@cov
detectOutliers(hbk.x)$object@center
library(covariance)
detectOutliers(hbk.x)
dat <- read.zoo(file)
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
dat <- read.zoo(file)
dat <- read.zoo(file, header=TRUE)
head(dat)
dat <- read.zoo(file, format="%Y-%m-%d", header=TRUE)
head(dat)
dat <- read.csv(file, format="%Y-%m-%d", header=TRUE)
dat <- read.csv(file, header=TRUE)
head(dat)
dat <- read.csv(file, header=TRUE)
head(dat)
dat <- dat[,3:6]
head(dat)
dat <- read.csv(file, header=TRUE)
dat <- dat[-(1:60),3:6]
head(dat)
detectOutliers(hbk.x)
outliers <- detectOutliers(hbk.x)
plot(outliers$classical_mahalanobis)
dev.off()
plot(outliers$classical_mahalanobis)
plot(sqrt(outliers$classical_mahalanobis))
sqrt(qchisq(0.975, ncol(dat)))
x <- sqrt(qchisq(0.975, ncol(dat)))
which[outliers$classical_mahalanobis > x]
which(outliers$classical_mahalanobis > x)
which(sqrt(outliers$classical_mahalanobis) > x)
outliers <- detectOutliers(dat)
which(sqrt(outliers$classical_mahalanobis) > x)
plot(sqrt(outliers$classical_mahalanobis))
dat <- read.csv(file, header=TRUE)
dat <- dat[-(1:60),3:6]
head(dat)
x <- sqrt(qchisq(0.975, ncol(dat)))
outliers <- detectOutliers(dat)
which(sqrt(outliers$classical_mahalanobis) > x)
plot(sqrt(outliers$classical_mahalanobis))
which(sqrt(outliers$classical_mahalanobis) > x)
xyplot(dat)
lattice::xyplot(dat)
lattice::xyplot(as.matrix(dat))
as.matrix(dat)
plot(dat[, 1])
plot(dat[, 1], type="l")
plot(dat[, 1], type="l")
plot(dat[, 2], type="l")
plot(dat[, 3], type="l")
plot(dat[, 1], type="l")
plot(dat[, 2], type="l")
plot(dat[, 3], type="l")
x <- sqrt(qchisq(0.975, ncol(dat)))
outliers <- detectOutliers(dat)
which(sqrt(outliers$classical_mahalanobis) > x)
plot(sqrt(outliers$classical_mahalanobis))
cl_outliers <- which(sqrt(outliers$classical_mahalanobis) > x)
outliers
cl_outliers_idx <- which(sqrt(outliers$classical_mahalanobis) > x)
cl_outliers_idx <- which(sqrt(outliers$classical_mahalanobis) > x)
rob_outliers_idx <- which(sqrt(outliers$classical_mahalanobis) > x)
outliers <- detectOutliers(dat)
cl_outliers_idx <- which(sqrt(outliers$classical_mahalanobis) > x)
rob_outliers_idx <- which(sqrt(outliers$robust_mahalanobis) > x)
plot(sqrt(outliers$classical_mahalanobis))
plot(sqrt(outliers$robust_mahalanobis))
rob_outliers_idx
cl_md <- sqrt(outliers$classical_mahalanobis)
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
outliers <- detectOutliers(dat)
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
cl_md[which(cl_md > x)]
rob_md[which(rob_md > x)]
plot(cl_md)
points(cl_md[which(cl_md > x)])
plot(cl_md)
plot(cl_md)
points(x=which(cl_md > x), y=cl_md[which(cl_md > x)])
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4)
abline(h=x)
abline(h=x, lty=2)
plot(cl_md)
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4)
abline(h=x, lty=2)
plot(cl_md)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4)
abline(h=x, lty=2)
plot(rob_md)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4)
abline(h=x, lty=2)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
plot(cl_md)
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
head(dat)
outliers[1]
outliers$classical_mahalanobis[1]
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[-(1:60),3:6], order.by=dat[,1])
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[-(1:60),3:6], order.by=as.Date(dat[,1]))
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[,3:6], order.by=as.Date(dat[,1]))
head(dat)
dat <- dat[-(1:60),]
head(dat)
plot(dat[, 1], type="l")
plot(dat[, 2], type="l")
plot(dat[, 3], type="l")
xyplot(dat)
outliers <- detectOutliers(dat)
cov_classic <- covEstimate(dat, "classic")
cov_classic <- covEstimate(as.matrix(dat), "classic")
cov_classic_rr <- CovClassic(dat)
library(covariance)
# Ch 6.7 in Scherer and Martin
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[,3:6], order.by=as.Date(dat[,1]))
dat <- dat[-(1:60),]
head(dat)
xyplot(dat)
x <- sqrt(qchisq(0.975, ncol(dat)))
outliers <- detectOutliers(dat)
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
plot(cl_md)
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
outliers$classical_mahalanobis[1]
outliers$classical_mahalanobis
length(outliers$classical_mahalanobis)
dim(dat)
index(dat)
names(outliers$classical_mahalanobis)
which(rob_md > x)
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
library(covariance)
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[,3:6], order.by=as.Date(dat[,1]))
dat <- dat[-(1:60),]
head(dat)
xyplot(dat)
outliers <- detectOutliers(dat)
x <- outliers$threshold
x
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
plot(cl_md)
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md)
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
cl_outlier_dates <- cl_md[which(cl_md > x)]
cl_outlier_dates
cl_outlier_dates <- names(cl_md[which(cl_md > x)])
cl_md <- sqrt(outliers$classical_mahalanobis)
cl_outlier_dates <- names(cl_md[which(cl_md > x)])
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
rob_outlier_dates <- names(rob_md[which(rob_md > x)])
rob_outlier_dates
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
xyplot(dat)
cl_outlier_dates
xyplot(dat)
abline(v=cl_outlier_dates)
abline(v=as.Date(cl_outlier_dates))
xyplot(dat)
abline(v=as.Date(cl_outlier_dates))
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(cl_outlier_dates))
panel.xyplot(...)
})
abline(v=as.Date(cl_outlier_dates))
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(cl_outlier_dates))
panel.xyplot(...)
})
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(cl_outlier_dates))
panel.xyplot(...)
})
dat[as.Date(cl_outlier_dates)]
dat[as.Date(rob_outlier_dates)]
# xyplot with vertical lines at outlier dates
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(rob_outlier_dates))
panel.xyplot(...)
})
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(rob_outlier_dates))
panel.xyplot(...)
})
dat[as.Date(rob_outlier_dates)]
source('~/devel/R/covariance/R/outlier.R', echo=TRUE)
library(covariance)
xyplot(cbind(cl_md, rob_md))
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[,3:6], order.by=as.Date(dat[,1]))
dat <- dat[-(1:60),]
head(dat)
xyplot(dat)
outliers <- detectOutliers(dat)
x <- outliers$threshold
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
cl_outlier_dates <- names(cl_md[which(cl_md > x)])
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
rob_outlier_dates <- names(rob_md[which(rob_md > x)])
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
xyplot(cbind(cl_md, rob_md))
xyplot(rbind(cl_md, rob_md))
plot.covfm
ddplot.covfm
robustbase:::ddplot.covfm
robust:::ddPlot.covfm
xyplot(rob_md ~ cl_md)
xyplot(cbind(rob_md, cl_md))
xyplot(rbind(rob_md, cl_md))
xyplot(as.data.frame(cbind(rob_md, cl_md)))
library(covariance)
file <- "/Users/rossbennett/Documents/UW Comp Fin/Portfolio-Optimization-Asset-Management/Material/chap6/normal.vs.hectic.ts.csv"
dat <- read.csv(file, header=TRUE)
dat <- xts(dat[,3:6], order.by=as.Date(dat[,1]))
dat <- dat[-(1:60),]
head(dat)
xyplot(dat)
outliers <- detectOutliers(dat)
x <- outliers$threshold
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
cl_outlier_dates <- names(cl_md[which(cl_md > x)])
x
# square root of classic mahalanobis distances
cl_md <- sqrt(outliers$classical_mahalanobis)
cl_outlier_dates <- names(cl_md[which(cl_md > x)])
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
rob_outlier_dates <- names(rob_md[which(rob_md > x)])
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
# xyplot with vertical lines at outlier dates
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(cl_outlier_dates))
panel.xyplot(...)
})
# actual data of the outlier dates
dat[as.Date(cl_outlier_dates)]
# xyplot with vertical lines at outlier dates
xyplot(dat, panel=function(...){
panel.abline(v=as.Date(rob_outlier_dates))
panel.xyplot(...)
})
# actual data of the outlier dates
dat[as.Date(rob_outlier_dates)]
# outliers$classical_mahalanobis
# length(outliers$classical_mahalanobis)
# dim(dat)
library(covariance)
outliers <- detectOutliers(dat)
library(covariance)
outliers <- detectOutliers(dat)
library(covariance)
outliers <- detectOutliers(dat)
outliers
m_dat <- data.frame(robust=outliers$robust_mahalanobis, classical=outliers$classical_mahalanobis)
View(m_dat)
xyplot(m_dat)
parallel(m_dat)
parallelplot(m_dat)
xyplot(m_dat)
xyplot(outliers$robust_mahalanobis)
outliers$robust_mahalanobis
xyplot(as.xts(outliers$robust_mahalanobis))
idx <- 1:nrow(dat)
xyplot(sqrt(outliers$robust_mahalanobis)~idx)
xyplot(sqrt(outliers$robust_mahalanobis)~idx|sqrt(outliers$classical_mahalanobis)~idx)
xyplot(cbind(sqrt(outliers$robust_mahalanobis), sqrt(outliers$classical_mahalanobis))~idx)
xyplot(cbind(sqrt(outliers$robust_mahalanobis), sqrt(outliers$classical_mahalanobis))~idx)
xyplot(m_dat~idx)
robust:::ddPlot.covfm
plot.covfm
distancePlot.covfm
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
par(mfrow=c(1,2))
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
par(mfrow=c(1,2))
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
par(mfrow=c(1,1))
layout(matrix(c(1,1,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2, 1,2), 2, 2, byrow = TRUE))
layout.show()
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
matrix(c(1,2, 1,2), 2, 2, byrow = TRUE)
layout(matrix(c(1,2, 1,2), 2, 2, byrow = TRUE))
layout.show()
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
plot(cl_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(cl_md > x), y=cl_md[which(cl_md > x)], labels=which(cl_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
# par(mfrow=c(1,1))
plot(rob_md, ylab="Square Root of Mahalanobis Distance")
text(x=which(rob_md > x), y=rob_md[which(rob_md > x)], labels=which(rob_md > x), pos=4, cex=0.8)
abline(h=x, lty=2)
cl_md <- sqrt(outliers$classical_mahalanobis)
# square root of robust mahalanobis distances
rob_md <- sqrt(outliers$robust_mahalanobis)
xyplot(y=cl_md, x=idx)
xyplot(y=cl_md, x=idx, panel=function(x, y){
panel.xyplot()
})
xyplot(cl_md~idx, panel=function(x, y){
panel.xyplot()
})
robust:::distancePlot.covfm
library(covariance)
